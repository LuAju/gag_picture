<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cl.fun.gag.pic.dao.UserMapper" >
    <resultMap id="BaseResultMap" type="com.cl.fun.gag.pic.entity.UserPo">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
        <result column="note" jdbcType="VARCHAR" property="note" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
        <result column="status" jdbcType="INTEGER" property="status" />
    </resultMap>

    <sql id="Base_Column_List">
    id, username, password, icon, email, nick_name, note, create_time, login_time, status
  </sql>
    <sql id="insert_Column_List">
      username, password, icon, email, nick_name, note, create_time, login_time, status
  </sql>
    <select id="getUserByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        ums_admin
        where
        username = #{username}
    </select>

    <insert id="insertUser" parameterType="com.cl.fun.gag.pic.entity.UserPo">
        insert into ums_admin (
        <include refid="insert_Column_List"/>
        )
        values
        (#{username},#{password},#{icon},#{email},#{nickName},#{note},#{createTime},#{loginTime},#{status})
    </insert>

    <select id="getUserPermission" resultType="com.cl.fun.gag.pic.entity.sql.UmsPermission" >
        SELECT
            p.*
        FROM
            ums_admin_role_relation ar
            LEFT JOIN ums_role r ON ar.role_id = r.id
            LEFT JOIN ums_role_permission_relation rp ON r.id = rp.role_id
            LEFT JOIN ums_permission p ON rp.permission_id = p.id
        WHERE
            ar.admin_id = #{userId}
            AND p.id IS NOT NULL
    </select>

</mapper>
